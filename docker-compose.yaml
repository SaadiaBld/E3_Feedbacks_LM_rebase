services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  webserver:
    image: apache/airflow:2.9.1-python3.11
    entrypoint: /opt/airflow/entrypoint.sh
    working_dir: /opt/airflow/project
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "true"
      PYTHONPATH: /opt/airflow/project
      AIRFLOW_UID: ${UID}
      AIRFLOW_GID: ${GID}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./requirements.txt:/requirements.txt
      - ./airflow/entrypoint.sh:/opt/airflow/entrypoint.sh
      - .:/opt/airflow/project
      - ./data:/opt/airflow/data
    ports:
      - "8080:8080"

  scheduler:
    image: apache/airflow:2.9.1-python3.11
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      PYTHONPATH: /opt/airflow/project
      AIRFLOW_UID: ${UID}
      AIRFLOW_GID: ${GID}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./airflow/logs:/opt/airflow/logs
      - ./requirements.txt:/requirements.txt
      - .:/opt/airflow/project
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && airflow scheduler"
    restart: always

  exporter:
    build:
      context: .
      dockerfile: monitoring/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: python /app/monitoring/exporter.py

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus-data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.2.3
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  pushgateway:
    image: prom/pushgateway
    command:
      - --persistence.file=/data/metrics
      - --persistence.interval=5m
    volumes:
      - ./pushgateway-data:/data
    ports:
      - "9091:9091"


volumes:
  postgres-db-volume:
  grafana-data:
